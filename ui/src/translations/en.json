{
  "$acme": "$ACME",
  "abi": "ABI - Solidity Application Binary Interface",
  "acme": "ACME",
  "address": "Address",
  "amount": "Amount",
  "apiID": "API ID",
  "apiResponse": "API Response",
  "apis": "APIs",
  "apisKnownToFirefly": "APIs Known to FireFly",
  "appCodeInstructions": "Build an action using the panels on the left. Click \"Run\" to execute the action via the backend server. FireFly events related to the transaction will appear on the right.",
  "applicationCode": "Application Code",
  "approvalID": "Approval ID",
  "attachAMessage": "Attach a Message",
  "back": "Back",
  "backToStepOne": "Back to Step 1",
  "balances": "Balances",
  "balancesFor": "Balances for",
  "batchMessages": "Batch Messages",
  "batchPin": "Batch Pin",
  "blockchainEventID": "Blockchain Event ID",
  "blockchainEventReceived": "Blockchain Event Received",
  "blockchainInvokeFailed": "Blockchain Invoke Failed",
  "blockchainInvokeSucceeded": "Blockchain Invoke Succeeded",
  "blockNumber": "Block Number",
  "blockNumberDescription": "The block number to subscribe from.",
  "broadcast": "Broadcast",
  "broadcastShortInfo": "Sends a message visible to all parties in the network",
  "broadcastTitle": "Send a Broadcast Message",
  "burn": "Burn",
  "burnShortInfo": "Destroys tokens in a token pool",
  "burnTitle": "Burn a Token",
  "chaincode": "Chaincode",
  "chaincodeHelperText": "The name of the deployed Chaincode.",
  "channel": "Channel",
  "channelHelperText": "The channel where the Chaincode has been deployed.",
  "code": "Code",
  "compileSmartContract": "Compile your smart contract",
  "connect": "Connect",
  "connected": "Connected",
  "connectedToFirefly": "Listening for events from backend",
  "connector": "Connector",
  "continue": "Continue",
  "contractAddress": "Contract Address",
  "contractAddressHelperText": "The contract address on your blockchain.",
  "contractApi": "Contract API",
  "contractApiConfirmed": "Contract API Confirmed",
  "contractDeployedToFirefly": "Your contract is now deployed to FireFly!",
  "contractInterface": "Contract Interface",
  "contractInterfaceConfirmed": "Contract Interface Confirmed",
  "contractInterfaceTitle": "Define a Contract Interface",
  "contractInvoke": "Contract Invoke",
  "contractListenerNameHelperText": "A custom name for your listener",
  "contracts": "Contracts",
  "contractTopicHelperText": "A FireFly identifier to group events across multiple listeners.",
  "copyCode": "Copy Code",
  "createDatatypeInfo": "Broadcasts a schema for all parties to use when validating a message",
  "createDatatypeTitle": "Define a Datatype",
  "dashboard": "Dashboard",
  "datatypeConfirmed": "Datatype Confirmed",
  "datatypeID": "Datatype ID",
  "datatypes": "Datatypes",
  "datatypeShortInfo": "A JSON schema that parties will validate data against",
  "datatypeTitle": "Send a Broadcast Message",
  "defineContractInterfaceInfo": "Defines all methods and events of your contract to FireFly",
  "deployCompiledContract": "Deploy your compiled contract",
  "deployContractInfo": "Compile and deploy your contract to the blockchain",
  "deployContractTitle": "Deploy a Contract",
  "did": "DID",
  "disconnect": "Disconnect",
  "disconnected": "Disconnected",
  "discord": "Discord",
  "docs": "Docs",
  "durable": "Durable",
  "either": "Either",
  "ephemeral": "Ephemeral",
  "events": "Events",
  "eventsSubmittedWillShowHere": "Events submitted to FireFly will show here.",
  "eventSubscription": "Event Subscription",
  "exampleAddress": "ex. 0x123....789",
  "exampleAmount": "ex. 10",
  "exampleFromAddress": "ex. 0x987....321",
  "exampleTag": "ex. new_widget",
  "exampleTokenIndex": "ex. 7",
  "exampleTopic": "ex. widget_123",
  "ffi": "FFI - FireFly Interface",
  "ffiShort": "FFI",
  "filterEventSubscriptions": "Filter Event Subscriptions (Optional)",
  "finish": "Finish",
  "fireflyCurrentState": "FireFly's Current State",
  "firstEvent": "First Event",
  "firstEventDescription": "The first event for this listener to index. Valid options are 'newest', 'oldest', or a specific block number.",
  "followStepsInInstructions": "Follow steps outlined in the instructions",
  "format": "format",
  "fromAddress": "From Address",
  "fungible": "Fungible",
  "github": "Github",
  "home": "Home",
  "identityConfirmed": "Identity Confirmed",
  "identityID": "Identity ID",
  "identityUpdated": "Identity Updated",
  "in": "In",
  "installSolc": "Install the Solidity Compiler",
  "interfaceFormat": "Interface Format",
  "interfaceID": "Interface ID",
  "jsonSchema": "JSON Schema",
  "listener": "Listener",
  "message": "Message",
  "messageConfirmed": "Message Confirmed",
  "messageID": "Message ID",
  "messageRejected": "Message Rejected",
  "messages": "Messages",
  "messagesMultipartyWarning": "Messaging is currently disabled when multiparty mode is off",
  "messageType": "Message Type",
  "messagingMethod": "Messaging Method",
  "mint": "Mint",
  "mintShortInfo": "Generates a new token in a token pool",
  "mintTitle": "Mint a Token",
  "name": "Name",
  "namespaceConfirmed": "Namespace Confirmed",
  "namespaceID": "Namespace ID",
  "namespaceX": "Namespace: {{namespace}}",
  "noAPIsRegisteredWithFireFly": "No APIs Registered with FireFly",
  "noBalancesForWallet": "No Balances for Wallet",
  "noConnectors": "No Token Connectors",
  "noDatatypes": "No Datatypes",
  "none": "None",
  "nonfungible": "Non-Fungible",
  "notConnected": "Not Connected",
  "notConnectedToFirefly": "Not listening for events from backend",
  "noTokenPools": "No Token Pools",
  "nullAddress": "0x0000000000000000000000000000000000000000",
  "operationError": "Operation Error",
  "operationErrorID": "Operation Error ID",
  "operationID": "Operation ID",
  "or": "or",
  "payload": "Payload",
  "poolID": "Pool ID",
  "poolName": "Pool Name",
  "poolShortInfo": "Defines a new set of tokens for FireFly to index",
  "poolSymbol": "Pool Symbol",
  "poolTitle": "Create a Token Pool",
  "postSentTo": "POST Sent to ",
  "private": "Private",
  "privateShortInfo": "Sends a message to a restricted set of parties",
  "privateTitle": "Send a Private Message",
  "protocolID": "Protocol ID",
  "recipients": "Recipients",
  "referenceID": "Reference ID",
  "refreshConnection": "Refresh Connection",
  "registerApiListenerTitle": "Register a Contract Listener",
  "registerContractApiInfo": "Generates an interactive HTTP API from your contract",
  "registerContractApiListenerInfo": "Instructs FireFly to listen for and index events from your contract",
  "registerContractApiTitle": "Register a Contract API",
  "run": "Run",
  "schema": "Schema",
  "serverCode": "Server Code",
  "serverCodeInfo": "Build an action using the panels on the left. When you press run, the backend Node.js server will execute a code snippet similar to below.",
  "serverResponse": "Server Response",
  "solidityABI": "Solidity ABI",
  "specifyDatatype": "Specify Datatype",
  "standard": "Standard",
  "subject": "Subject",
  "subscribe": "Subscribe",
  "subscription": "Subscription",
  "symbol": "Symbol",
  "tag": "Tag",
  "tagHelperText": "Indicates the purpose of the message to the applications that process it.",
  "toAddress": "To Address",
  "tokenApproval": "Token Approval",
  "tokenApprovalConfirmed": "Token Approval Confirmed",
  "tokenApprovalOpFailed": "Token Approval Operation Failed",
  "tokenBalance": "Token Balance",
  "tokenIndex": "Token Index",
  "tokenIndexes": "Token Indexes",
  "tokenPool": "Token Pool",
  "tokenPoolContractInterfaceHelperText": "The FireFly Interface for a custom token contract. Use \"Automatic\" for built-in contracts.",
  "tokenPoolAddressHelperText": "The address of an existing token contract, if supported by the token connector.",
  "tokenPoolConfirmed": "Token Pool Confirmed",
  "tokenPoolFailed": "Token Pool Failed",
  "tokenPoolRecipientHelperText": "The account to transfer the token(s) to.",
  "tokenRecipient": "Token Recipient",
  "tokens": "Tokens",
  "tokenTransfer": "Token Transfer",
  "tokenTransferConfirmed": "Token Transfer Confirmed",
  "tokenTransferFailed": "Token Transfer Failed",
  "topic": "Topic",
  "topicHelperText": "Associates this message with an ordered stream of data.",
  "total": "Total",
  "transaction": "Transaction",
  "transactionID": "Transaction ID",
  "transactionSubmitted": "Transaction Submitted",
  "transfer": "Transfer",
  "transferID": "Transfer ID",
  "transferShortInfo": "Transfers tokens to another account",
  "transferTitle": "Transfer Tokens",
  "transferType": "Transfer Type",
  "type": "Type",
  "typescriptSDK": "Typescript SDK",
  "unpinned": "Unpinned",
  "uploadFile": "Upload File",
  "version": "Version",
  "waitingForTxEventsToFinish": "Waiting for events to finish"
}