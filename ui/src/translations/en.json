{
  "abc": "ABC",
  "abcCoin": "ABC Coin",

  "abi": "ABI JSON",
  "address": "Address",
  "amount": "Amount",
  "apiID": "Api ID",
  "apiResponse": "API Response",
  "apis": "APIs",
  "backToStepOne": "Back to Step 1",
  "balances": "Balances",
  "balancesFor": "Balances for",
  "batchMessages": "Batch Messages",
  "blockchainEventID": "Blockchain Event ID",
  "blockchainEventReceived": "Blockchain Event Received",
  "broadcastShortInfo": "Sends a message visible to all parties in the network",
  "broadcastTitle": "Send a Broadcast Message",
  "burn": "Burn",
  "burnShortInfo": "Destroy a token in a token pool",
  "burnTitle": "Burn a Token",
  "code": "Code",
  "connect": "Connect",
  "connected": "Connected",
  "connectedToFirefly": "Listening for events from backend",
  "connector": "Connector",
  "contractApi": "Contract API",
  "contractApiConfirmed": "Contract API Confirmed",
  "contractInterface": "Contract Interface",
  "contractInterfaceConfirmed": "Contract Interface Confirmed",
  "contractInterfaceTitle": "Define a Contract Interface",
  "contracts": "Contracts",
  "copyCode": "Copy Code",
  "dashboard": "Dashboard",
  "datatypeConfirmed": "Datatype Confirmed",
  "datatypeID": "Datatype ID",
  "datatypeShortInfo": "Datatypes are broadcasts to the network so everybody refers to the same JSON schema when validating their data",
  "datatypeTitle": "Send a Broadcast Message",
  "defineContractInterfaceInfo": "Upload the interface of your contract, describing all its methods and events, in either FFI or Solidity JSON ABI format",
  "deployContractInfo": "Follow the link on each step to compile and deploy a contract on your blockchain",
  "deployContractTitle": "Deploy a Contract",
  "disconnect": "Disconnect",
  "disconnected": "Disconnected",
  "docs": "Docs",
  "durable": "Durable",
  "ephemeral": "Ephemeral",
  "events": "Events",
  "eventsSubmittedWillShowHere": "Events submitted to FireFly will show here.",
  "eventSubscription": "Event Subscription",
  "exampleAddress": "ex. 0x123....789",
  "exampleAmount": "ex. 10",
  "exampleFromAddress": "ex. 0x987....321",
  "exampleTag": "ex. new_widget",
  "exampleTopic": "ex. widget_123",
  "ffi": "FFI",
  "filterEventSubscriptions": "Filter Event Subscriptions (Optional)",
  "fireflyCurrentState": "FireFly's Current State",
  "fromAddress": "From Address",
  "fungible": "Fungible",
  "home": "Home",
  "identityConfirmed": "Identity Confirmed",
  "identityUpdated": "Identity Updated",
  "interfaceFormat": "Interface Format",
  "interfaceID": "Interface ID",
  "listener": "Listener",
  "message": "Message",
  "messageConfirmed": "Message Confirmed",
  "messageID": "Message ID",
  "messageRejected": "Message Rejected",
  "messageType": "Message Type",
  "messaging": "Messaging",
  "mint": "Mint",
  "mintShortInfo": "Generate a new token in a token pool",
  "mintTitle": "Mint a Token",
  "name": "Name",
  "namespaceConfirmed": "Namespace Confirmed",
  "noConnectors": "No Token Connectors",
  "nonfungible": "Non-Fungible",
  "notConnected": "Not Connected",
  "notConnectedToFirefly": "Not listening for events from backend",
  "noTokenPools": "No Token Pools",
  "nullAddress": "0x0000000000000000000000000000000000000000",
  "operationErrorID": "Operation Error ID",
  "payload": "Payload",
  "poolID": "Pool ID",
  "poolName": "Pool Name",
  "poolShortInfo": "Token pools are a FireFly construct for describing a set of tokens",
  "poolSymbol": "Pool Symbol",
  "poolTitle": "Create a Token Pool",
  "postSentTo": "POST Sent to ",
  "privateShortInfo": "Sends a message to a restricted set of parties",
  "privateTitle": "Send a Private Message",
  "protocolID": "Protocol ID",
  "recipients": "Recipients",
  "referenceID": "Reference ID",
  "refreshConnection": "Refresh Connection",
  "registerApiListenerTitle": "Register a Contract Listener",
  "registerContractApiInfo": "Generate an interactive HTTP API from your contract, complete with an OpenAPI definition and Swagger UI",
  "registerContractApiListenerInfo": "Instruct FireFly to begin listening to and indexing events from your contract",
  "registerContractApiTitle": "Register a Contract API",
  "run": "Run",
  "schema": "Schema",
  "serverCode": "Server Code",
  "serverCodeInfo": "Build an action using the panels on the left. When you press run, the backend Node.js server will execute a code snippet similar to below.",
  "serverResponse": "Server Response",
  "standard": "Standard",
  "subscribe": "Subscribe",
  "subscription": "Subscription",
  "symbol": "Symbol",
  "tag": "Tag",
  "toAddress": "To Address",
  "tokenApprovalConfirmed": "Token Approval Confirmed",
  "tokenApprovalOpFailed": "Token Approval Operation Failed",
  "tokenBalance": "Token Balance",
  "tokenIndex": "Token Index",
  "tokenIndexes": "Token Indexes",
  "tokenPool": "Token Pool",
  "tokenPoolConfirmed": "Token Pool Confirmed",
  "tokenRecipient": "Token Recipient",
  "tokens": "Tokens",
  "tokenTransferConfirmed": "Token Transfer Confirmed",
  "tokenTransferFailed": "Token Transfer Failed",
  "topic": "Topic",
  "total": "Total",
  "transactionID": "Transaction ID",
  "transactionSubmitted": "Transaction Submitted",
  "transfer": "Transfer",
  "transferID": "Transfer ID",
  "transferShortInfo": "Transfer tokens from one address to another",
  "transferTitle": "Transfer Tokens",
  "transferType": "Transfer Type",
  "type": "Type",
  "typescriptSDK": "Typescript SDK",
  "uploadFile": "Upload File",
  "version": "Version",
  "waitingForTxEventsToFinish": "Waiting for Events to Finish..."
}
